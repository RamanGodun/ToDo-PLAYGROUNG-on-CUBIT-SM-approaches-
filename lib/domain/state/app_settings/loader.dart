import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:hydrated_bloc/hydrated_bloc.dart';

/// üåÄ GlobalLoaderCubit - –∫–µ—Ä—É—î —Å—Ç–∞–Ω–æ–º –ª–æ–∞–¥–µ—Ä–∞ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Ä—ñ–≤–Ω—ñ
class GlobalLoaderCubit extends Cubit<bool> {
  GlobalLoaderCubit() : super(false);

  void startLoading() => emit(true);
  void stopLoading() => emit(false);
}

/// üåê GlobalLoaderMiddleware - Middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–æ–º
class GlobalLoaderMiddleware<Event, State> extends BlocObserver {
  final GlobalLoaderCubit globalLoaderCubit;

  GlobalLoaderMiddleware({required this.globalLoaderCubit});

  @override
  void onEvent(Bloc bloc, Object? event) {
    super.onEvent(bloc, event);
    // –Ø–∫—â–æ –ø–æ–¥—ñ—è —î –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—é, –ø–æ–∫–∞–∑—É—î–º–æ –ª–æ–∞–¥–µ—Ä
    if (event is ShowLoaderEvent) {
      globalLoaderCubit.startLoading();
    } else if (event is HideLoaderEvent) {
      globalLoaderCubit.stopLoading();
    }
  }

  @override
  void onTransition(Bloc bloc, Transition transition) {
    super.onTransition(bloc, transition);
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ –ø–µ—Ä–µ—Ö–æ–¥—É —Å—Ç–∞–Ω—É
    if (transition.nextState is! LoadingState) {
      globalLoaderCubit.stopLoading();
    }
  }
}

/// üì¶ –ü—Ä–∏–∫–ª–∞–¥ –ø–æ–¥—ñ–π –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–æ–º
abstract class LoaderEvent {}

class ShowLoaderEvent extends LoaderEvent {}

class HideLoaderEvent extends LoaderEvent {}

/// üßÆ –°—Ç–∞–Ω –¥–ª—è –ª–æ–∞–¥–µ—Ä–∞
abstract class LoadingState {}
